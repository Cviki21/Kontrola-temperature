#include <WiFi.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <ESPAsyncWebServer.h>

// Definiraj veličinu zaslona
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// Definiraj SDA i SCL pinove
#define OLED_SDA 22
#define OLED_SCL 21

// Definiraj I2C adresu zaslona (obično je 0x3C)
#define OLED_I2C_ADDRESS 0x3C

// Definiraj DHT pin i tip senzora
#define DHTPIN 4
#define DHTTYPE DHT11

// Definiraj relej pin
#define RELAY_PIN 5

// Kreiraj instancu zaslona
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Kreiraj instancu DHT senzora
DHT dht(DHTPIN, DHTTYPE);

// Postavi SSID i lozinku za Wi-Fi
const char* ssid = "Tvoj WiFi";
const char* password = "Lozinka tvog wifi-a";

// Kreiraj instancu web servera
AsyncWebServer server(80);

// Varijabla za praćenje stanja releja
bool relayState = false;
bool autoMode = false;
float targetTemperature = 25.0;

void setup() {
  // Inicijaliziraj serijsku komunikaciju
  Serial.begin(115200);

  // Inicijaliziraj Wire sa definiranim SDA i SCL pinovima
  Wire.begin(OLED_SDA, OLED_SCL);

  // Inicijaliziraj zaslon sa I2C adresom
  if(!display.begin(SSD1306_SWITCHCAPVCC, OLED_I2C_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Petlja koja ostaje zaglavljena u slučaju greške
  }

  // Inicijaliziraj DHT senzor
  dht.begin();

  // Inicijaliziraj relej pin kao izlazni
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW);

  // Očisti zaslon
  display.clearDisplay();

  // Postavi boju teksta na bijelu
  display.setTextColor(SSD1306_WHITE);

  // Postavi veličinu teksta
  display.setTextSize(1);

  // Postavi početnu poziciju kursora
  display.setCursor(0, 0);

  // Prikaz inicijalnog teksta
  display.println(F("DHT11 & Relay"));
  display.display();

  // Poveži se na Wi-Fi mrežu
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Ispiši IP adresu na serijski monitor
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Ispiši IP adresu na OLED zaslon
  display.setCursor(0, 56); // Postavi kursor na posljednji red
  display.print("IP: ");
  display.println(WiFi.localIP());
  display.display();

  // Definiraj rute za web server
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
    float temperature = dht.readTemperature();
    float humidity = dht.readHumidity();
    String relayStatus;
    String buttonColor;

    if (autoMode) {
      relayStatus = "AUTO";
      buttonColor = "yellow";
    } else {
      relayStatus = relayState ? "OFF" : "ON";
      buttonColor = relayState ? "green" : "red";
    }

    String html = "<html><body>";
    html += "<h1>DHT11 Sensor</h1>";
    html += "<p>Temperature: " + String(temperature) + " &deg;C</p>";
    html += "<p>Humidity: " + String(humidity) + " %</p>";
    html += "<h1>Relay</h1>";
    html += "<p>Relay is <span style=\"color:" + buttonColor + "\">" + relayStatus + "</span></p>";
    html += "<button id=\"relayButton\" style=\"background-color:" + buttonColor + ";color:white\" onclick=\"setRelay('ON')\">ON</button>";
    html += "<button id=\"relayButton\" style=\"background-color:" + buttonColor + ";color:white\" onclick=\"setRelay('OFF')\">OFF</button>";
    html += "<button id=\"relayButton\" style=\"background-color:" + buttonColor + ";color:white\" onclick=\"setRelay('AUTO')\">AUTO</button>";
    html += "<h1>Set Target Temperature</h1>";
    html += "<input type=\"number\" id=\"targetTemp\" value=\"" + String(targetTemperature) + "\"><button onclick=\"setTargetTemp()\">Set</button>";
    html += "<script>";
    html += "function setRelay(mode) {";
    html += "var xhr = new XMLHttpRequest();";
    html += "xhr.open(\"GET\", \"/relay/set?mode=\" + mode, true);";
    html += "xhr.send();";
    html += "xhr.onload = function() {";
    html += "if (xhr.status == 200) {";
    html += "location.reload();";
    html += "}";
    html += "}";
    html += "}";
    html += "function setTargetTemp() {";
    html += "var temp = document.getElementById(\"targetTemp\").value;";
    html += "var xhr = new XMLHttpRequest();";
    html += "xhr.open(\"GET\", \"/setTargetTemp?temp=\" + temp, true);";
    html += "xhr.send();";
    html += "}";
    html += "</script>";
    html += "</body></html>";
    request->send(200, "text/html", html);
  });

  server.on("/relay/set", HTTP_GET, [](AsyncWebServerRequest *request){
    if (request->hasParam("mode")) {
      String mode = request->getParam("mode")->value();
      if (mode == "ON") {
        relayState = false;
        autoMode = false;
        digitalWrite(RELAY_PIN, LOW);
      } else if (mode == "OFF") {
        relayState = true;
        autoMode = false;
        digitalWrite(RELAY_PIN, HIGH);
      } else if (mode == "AUTO") {
        autoMode = true;
      }
    }
    request->send(200, "text/plain", "OK");
  });

  server.on("/setTargetTemp", HTTP_GET, [](AsyncWebServerRequest *request){
    if (request->hasParam("temp")) {
      targetTemperature = request->getParam("temp")->value().toFloat();
    }
    request->send(200, "text/plain", "OK");
  });

  // Pokreni web server
  server.begin();
}

void loop() {
  // Očitavanje temperature i vlažnosti
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Provjera je li očitavanje uspješno
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Automatsko upravljanje relejom prema zadanoj temperaturi
  if (autoMode) {
    if (temperature >= targetTemperature) {
      relayState = true;
      digitalWrite(RELAY_PIN, HIGH);
    } else {
      relayState = false;
      digitalWrite(RELAY_PIN, LOW);
    }
  }

  // Prikaz temperature i vlažnosti na serijskom monitoru
  Serial.print(F("Temperature: "));
  Serial.print(temperature);
  Serial.print(F("°C  Humidity: "));
  Serial.print(humidity);
  Serial.println(F("%"));

  // Osvježi prikaz na OLED zaslonu
  display.clearDisplay();
  display.setCursor(0, 0);
  display.println(F("DHT11 & Relay"));
  display.print(F("Temp: "));
  display.print(temperature);
  display.println(F(" C"));
  display.print(F("Humidity: "));
  display.print(humidity);
  display.println(F(" %"));
  display.print(F("Relay: "));
  if (autoMode) {
    display.println("AUTO");
  } else {
    display.println(relayState ? "OFF" : "ON");
  }
  display.print(F("Target: "));
  display.print(targetTemperature);
  display.println(F(" C"));
  display.setCursor(0, 56); // Postavi kursor na posljednji red
  display.print("IP: ");
  display.println(WiFi.localIP());
  display.display();

  // Čekaj 2 sekunde prije ponovnog očitavanja
  delay(2000);
}
